---
- hosts: sonic
  gather_facts: false
  collections:
     - dellemc.enterprise_sonic

  tasks:
  - name: SONiC Basic Provisioning
    vars:
      ansible_connection: ssh
    include_role:
      name: sonic-baseline
      apply:
        tags:
          - baseline
    tags:
      - baseline

- hosts: sonic
  gather_facts: false
  collections:
     - dellemc.enterprise_sonic
  
  tasks:
  - name: Enable OOB Mgmt VRF, 1st time
    sonic_config:
      lines:
        - ip vrf mgmt
    ignore_errors: yes
    register: output
    tags:
      - oob

  # - name: Enable OOB Mgmt VRF, 2nd time
  #   sonic_config:
  #     lines:
  #       - ip vrf mgmt
  #   register: output
  #   tags:
  #     - oob

- hosts: sonic
  gather_facts: false
  collections:
     - dellemc.enterprise_sonic

  # tasks:
  # - name: SONiC Basic Provisioning
  #   block:
  #   - name: Config Hostname and Standard Interface
  #     dellemc.enterprise_sonic.sonic_system:
  #       config:
  #         hostname: "{{ inventory_hostname }}"
  #         interface_naming: standard
  #         anycast_address:
  #           ipv6: true
  #           ipv4: true
  #           mac_address: "{{ tor_pair_vmac }}"
  #       state: merged
  #     tags:
  #       - system

  tasks:
  - name: SONiC Basic Provisioning
    block:
    - name: Enable Hostanme 1st time
      vars:
        ansible_command_timeout: 10
        ansible_connect_timeout: 10
      sonic_config:
          src: sonic/hostname.j2
      ignore_errors: yes
      tags:
        - hostname

    - name: Enable Hostanme 2nd time
      sonic_config:
          src: sonic/hostname.j2
      tags:
        - hostname

    - name: Enable Domain Server
      sonic_config:
          src: sonic/domain.j2
      tags:
        - domain

    - name: Enable Local Users
      sonic_config:
          src: sonic/user.j2
      when: (features.netserv.user is defined and features.netserv.user|lower == "yes")
      tags:
        - user

    - name: Enable NTP
      sonic_config:
          src: sonic/ntp.j2
      when: (features.netserv.ntp is defined and features.netserv.ntp|lower == "yes")
      tags:
        - ntp

    - name: Enable Syslog
      sonic_config:
          src: sonic/syslog.j2
      when: (features.netserv.syslog is defined and features.netserv.syslog|lower == "yes")
      tags:
        - syslog

    - name: Enable SNMP
      sonic_config:
          src: sonic/snmp.j2
      when: (features.netserv.snmp is defined and features.netserv.snmp|lower == "yes")
      tags:
        - snmp

    - name: Enable Group & AAA
      block:
      - name: Enable Tacacs
        sonic_config:
            src: sonic/tacacs.j2
        when: (features.netserv.tacacs is defined and features.netserv.tacacs|lower == "yes")
      - name: Enable Radius
        sonic_config:
            src: sonic/radius.j2
        when: (features.netserv.radius is defined and features.netserv.radius|lower == "yes")
      - name: Enable AAA
        sonic_config:
            src: sonic/aaa.j2
        when: (features.netserv.aaa is defined and features.netserv.aaa|lower == "yes")
      tags:
        - aaa
    tags:
      - netserv

- hosts: sonic
  gather_facts: false
  collections:
     - dellemc.enterprise_sonic

  tasks:
  - name: Enable Standard Interface Naming
    sonic_config:
      lines:
        - "interface-naming standard"
    ignore_errors: yes
  tags:
    - intf_naming

- hosts: sonic
  gather_facts: false
  collections:
     - dellemc.enterprise_sonic

  tasks:
  - name: Enable Northbound Layer3 Interface
    block:
    - name: Enable loopback Interface
      sonic_config:
          src: sonic/intf_lpbk.j2
    - name: Enable Leaf/Spine PTP Interface
      sonic_config:
          src: sonic/intf_northbound.j2
    tags:
      - northbound
      - interface

  - name: Enable Vlan Interface and STP
    block:
    - name: Enable Vlan
      sonic_config:
          src: sonic/intf_vlan.j2
    - name: Enable Spanning Tree
      sonic_config:
          src: sonic/stp.j2
      when: (features.interface.stp is defined and features.interface.stp|lower == "yes")
    tags:
      - vlan
      - interface

  - name: Enable Southbound L2/MLAG/Trunk Interface
    # vars:
    #   ansible_timeout: 120
    #   ansible_command_timeout: 60
    #   ansible_connect_timeout: 60
    block:
    - name: Breakout Port
      sonic_config:
          src: sonic/breakout.j2
      tags:
        - southbound

    - name: "Wait 45 secs for Breakout Finishing"
      pause:
        seconds: 45
      delegate_to: localhost
      tags: southbound
      when: ( features.interface.breakout is defined and features.interface.breakout|lower == "yes")

    - name: Enable Breakout Port Trunking
      sonic_config:
          src: sonic/intf_southbound.j2
      tags:
        - southbound

    - name: Enable Layer2 Port
      sonic_config:
          src: sonic/intf_l2.j2
      when: (features.interface.l2port is defined and features.interface.l2port|lower == "yes")
      tags:
        - l2port
    - name: Enable MLAG Domain
      sonic_config:
          src: sonic/mlag.j2
          # replace: block
      ignore_errors: yes
      when: (features.interface.mlag is defined and features.interface.mlag|lower == "yes")
      tags:
        - mlag
    - name: Enable Bond and Trunking
      sonic_config:
          src: sonic/intf_bond.j2
      when: (features.interface.bond is defined and features.interface.bond|lower == "yes")
      ignore_errors: yes
      tags:
        - bond
    tags:
      - southbound
      - interface

  - name: Enable Uplink Failure Detection (UFD) if defined
    sonic_config:
        src: sonic/ufd.j2
    when: (features.interface.ufd is defined and features.interface.ufd|lower == "yes")
    tags:
      - ufd
      - interface

  - name: Enable BGP Underlay
    block:
    - name: Enable Routing Policy
      sonic_config:
          src: sonic/route_pol.j2
      tags:
        - rpol

    - name: Enable Underlay BGP 1st time
      sonic_config:
          src: sonic/bgp_underlay.j2
          replace: block
      ignore_errors: yes
      tags:
        - bgp_under

    - name: Enable Underlay BGP 2nd time
      sonic_config:
          src: sonic/bgp_underlay.j2
          replace: block
      tags:
        - bgp_under
    tags:
      - underlay

  - name: Enable EVPN
    vars:
      # ansible_timeout: 120
      # ansible_command_timeout: 120
      # ansible_connect_timeout: 120
    block:
    - name: Enable VRF Instance
      sonic_config:
          src: sonic/evpn_vrf.j2
      ignore_errors: yes
      tags:
        - vrf
    - name: Enable Vxlan Tunneling
      sonic_config:
          src: sonic/vxlan.j2
      ignore_errors: yes
      tags:
        - vxlan
    - name: Enable Unified BGP Overlay if by design
      sonic_config:
          src: sonic/bgp_overlay_unified.j2
      tags:
        - bgp_over
      when: (features.overlay.uni_bgp is defined and features.overlay.uni_bgp|lower == "yes")

    - name: Enable iBGP Overlay if by design
      sonic_config:
          src: sonic/bgp_overlay_ibgp.j2
      tags:
        - bgp_over
      when: (features.overlay.ibgp is defined and features.overlay.ibgp|lower == "yes")

    - name: Enable EVPN Edge for Border Leaves
      sonic_config:
          src: sonic/evpn_edge.j2
      ignore_errors: yes
      tags:
        - evpn
    tags:
      - overlay

  - name: Enable Security
    vars:
      # ansible_timeout: 120
      # ansible_command_timeout: 120
      # ansible_connect_timeout: 120
    block:
    - name: Enable Access List
      sonic_config:
          src: sonic/acl.j2
      when: (features.security.acl is defined and features.security.acl|lower == "yes")
      tags:
        - acl

    - name: Enable CoPP
      sonic_config:
        src: sonic/copp.j2
        # lines:
        #   # - no ip access-group acl_test_v4 in
        #   # - no ipv6 access-group acl_test_v6 in
        #   - ip access-group {{ copp.v4.name }} in
        #   - ipv6 access-group {{ copp.v6.name }} in
        # parents: ['line vty']
        # match: strict
        # ### replace: block doesn't work!
        replace: line
      when: (features.security.copp is defined and features.security.copp|lower == "yes")
      tags:
        - copp

    - name: Enable Interface ACL
      sonic_config:
        src: sonic/intf_acl.j2
        # ### replace: block doesn't work!
        replace: line
      ignore_errors: yes
      when: (features.security.intf is defined and features.security.intf|lower == "yes")
      tags:
        - intf_acl
    tags:
      - security

  - name: Enable Monitoring
    vars:
      # ansible_timeout: 120
      # ansible_command_timeout: 120
      # ansible_connect_timeout: 120
    block:
    - name: Enable Sflow
      vars:
        # ansible_timeout: 120
        # ansible_command_timeout: 60
        # ansible_connect_timeout: 60
      sonic_config:
          src: sonic/sflow.j2
      when: (features.netserv.sflow is defined and features.netserv.sflow|lower == "yes")
      tags:
        - sflow

    - name: Enable SPAN
      sonic_config:
        src: sonic/span.j2
        replace: line
      when: (features.netserv.span is defined and features.netserv.span|lower == "yes")
      tags:
        - span

    - name: Enable Telemetry
      sonic_config:
        src: sonic/telemetry.j2
        # ### replace: block doesn't work!
        replace: line
      ignore_errors: yes
      when: (features.netserv.telemetry is defined and features.netserv.telemetry|lower == "yes")
      tags:
        - telemetry
    tags:
      - monitor

  - name: "Enable Services with Json Module"
    vars:
      ansible_connection: ssh
    block:
    - name: Presence of JSON CFG Directory
      become: false
      file:
        path: "~/json"
        state: directory
        mode: a+r
      tags:
        - cfggen

    - name: Generate Telemetry JSON CFG
      become: true
      template:
        src: templates/sonic/telemetry_json.j2
        dest: "~/json/telemetry_{{ inventory_hostname }}.json"
        mode: a+r
      tags:
        - cfggen

    - name: Apply JSON Config
      command: "config load ~/json/telemetry_{{ inventory_hostname }}.json -y"
      become: true
      notify:
        - Save Config_DB.JSON
      tags:
        - cfg_apply
    tags:
      - telemetry

  handlers:
    - name: Save Config_DB.JSON
      vars:
        ansible_connection: ssh
      command: "config save -y"
      become: true

