## Edge assumption
## Edge Uplink 2
## Edge 2 BGP peers/uplink
## only Border leaf has edge ports
edge_link_ct: 2
edge_offset: "{{ hostvars['bleaf01'].seq }}"
edge_links_seq:
    - "{{ edge_link_ct*(seq-edge_offset|int) }}"
    - "{{ edge_link_ct*(seq-edge_offset|int)+1 }}"

edge_links:
   -
    port: "27"
    desc: "Gateway uplink_To_CE01"
    netv4: "{{ edge_netv4|ansible.utils.ipsubnet(edge_netmaskv4, edge_links_seq[0]) }}"
    netv6: "{{ edge_netv6|ansible.utils.ipsubnet(edge_netmaskv6, edge_links_seq[0]) }}"
    vrf: RED
   -
    port: "28"
    desc: "Gateway uplink_To_CE02"
    netv4: "{{ edge_netv4|ansible.utils.ipsubnet(edge_netmaskv4, edge_links_seq[1]) }}"
    netv6: "{{ edge_netv6|ansible.utils.ipsubnet(edge_netmaskv6, edge_links_seq[1]) }}"
    vrf: RED

edge_vlans:
    # - 
    #     desc: "To CE01"
    #     id: "1991"
    #     netv4: "{{ edge_netv4|ansible.utils.ipsubnet(edge_netmaskv4, edge_links_seq[0]) }}"
    #     netv6: "{{ edge_netv6|ansible.utils.ipsubnet(edge_netmaskv6, edge_links_seq[0]) }}"
    #     port: 27
    #     vrf: RED
    # - 
    #     desc: "To CE02"
    #     id: "1992"
    #     netv4: "{{ edge_netv4|ansible.utils.ipsubnet(edge_netmaskv4, edge_links_seq[1]) }}"
    #     netv6: "{{ edge_netv6|ansible.utils.ipsubnet(edge_netmaskv6, edge_links_seq[1]) }}"
    #     port: 28
    #     vrf: RED

evpn:
    vrf:
    - 
        name: "RED"
        desc: "RED_VRF"
        rd_pfx: "{{ lpbk1.addr_v4 }}"
        rt_pfx: "1001"
        l3_vni: 
          id: "9001"
          vlan: "901"
        interfaces:
        - 
            name: "loopback901"
            addr_v4: "10.10.201.{{ seq }}/32"
            addr_v6: "2001:ffff:ffff::{{ seq }}/128"
        type5:
        - 
            afi: ipv4
            proto: connected
            r_map: 
        - 
            afi: ipv4
            proto: static
            r_map: 
        proto:
            bgp:
                gw_peer_v4:
                    - 
                        addr: "{{ edge_netv4|ansible.utils.ipsubnet(edge_netmaskv4, edge_links_seq[0]) | ansible.utils.ipaddr(-2) | ansible.utils.ipaddr('address') }}"
                        asn: "64999"
                    - 
                        addr: "{{ edge_netv4|ansible.utils.ipsubnet(edge_netmaskv4, edge_links_seq[1]) | ansible.utils.ipaddr(-2) | ansible.utils.ipaddr('address') }}"
                        asn: "64998"
                gw_peer_v6:
                    - 
                        addr: "{{ edge_netv6|ansible.utils.ipsubnet(edge_netmaskv6, edge_links_seq[0]) | ansible.utils.ipaddr(-2) | ansible.utils.ipaddr('address') }}"
                        asn: "64999"
                    - 
                        addr: "{{ edge_netv6|ansible.utils.ipsubnet(edge_netmaskv6, edge_links_seq[1]) | ansible.utils.ipaddr(-2) | ansible.utils.ipaddr('address') }}"
                        asn: "64998"
            static_v4:
                - 
                    dest: 0.0.0.0/0
                    nh: "{{ edge_netv4|ansible.utils.ipsubnet(edge_netmaskv4, edge_links_seq[0]) | ansible.utils.ipaddr(-2) | ansible.utils.ipaddr('address') }}"
                - 
                    dest: 0.0.0.0/0
                    nh: "{{ edge_netv4|ansible.utils.ipsubnet(edge_netmaskv4, edge_links_seq[1]) | ansible.utils.ipaddr(-2) | ansible.utils.ipaddr('address') }}"
            static_v6:
                - 
                    dest: 0::0/0
                    nh: "{{ edge_netv6|ansible.utils.ipsubnet(edge_netmaskv6, edge_links_seq[0]) | ansible.utils.ipaddr(-2) | ansible.utils.ipaddr('address') }}"
                - 
                    dest: 0::0/0
                    nh: "{{ edge_netv6|ansible.utils.ipsubnet(edge_netmaskv6, edge_links_seq[1]) | ansible.utils.ipaddr(-2) | ansible.utils.ipaddr('address') }}"
    - 
        name: "BLUE"
        desc: "BLUE_VRF"
        rd_pfx: "{{ lpbk1.addr_v4 }}"
        rt_pfx: "1002"
        l3_vni: 
          id: "9002"
          vlan: "902"
        interfaces:
        - 
            name: "loopback902"
            addr_v4: "10.10.202.{{ seq }}/32"
            addr_v6: 
        type5:
        - 
            r_map: 
            afi: ipv4
            proto: "connected"
