---
- hosts: sonic
  gather_facts: No
  connection: network_cli

  collections:
     - dellemc.enterprise_sonic

  tasks:
  - name: "Clean up the legacy Configuration"
    vars:
        ansible_connection: ssh
    become: true
    become_user: root
    block:
      # - name: "Copy Initial config_db.json to Local Dir"
      #   copy:
      #     src: 'config_db.json'
      #     dest: '~admin/config_db.json'
      #     mode: u=rw,g=r,o=r
          
      # - name: "Reset Switch Configuration to Default"
      #   expect:
      #     command: 'config reload ~admin/config_db.json'
      #     responses:
      #       '.*': 'y'
      #   ignore_unreachable: yes

      # - name: "Reload SONiC if needed"
      #   dellemc.enterprise_sonic.sonic_command:
      #     commands:
      #       - command: 'reload'
      #         prompt: '[confirm yes/no]: ?$'
      #         answer: 'no'
      #   tags: reload

      - name : Reset Switch Configuration
        sonic_command:
          commands:
            - command: 'write erase boot'
              prompt: 'continue'
              answer: 'y'
            # - command: 'reload'
            #   prompt: '[confirm yes/no]: ?$'
            #   answer: 'yes'
        ignore_unreachable: yes

      - name: "Reload SONiC if needed"
        sonic_command:
          commands:
            - command: 'reload'
              prompt: '[confirm yes/no]: ?$'
              answer: 'no'
        tags: reset

      - name: "Wait for Switch ready"
        wait_for_connection:
          connect_timeout: 10
          sleep: 5
          delay: 10
          timeout: 360
                    
      - name: "Wait 60 secs for Switch coming up"
        pause:
          seconds: 60
        delegate_to: localhost
        tags: reset

      - name: Disable ZTP
        vars:
          ansible_connection: ssh
        become: yes
        ansible.builtin.expect:
          command: ztp disable
          responses:
            ".*[yes/NO]": "Yes"
    tags:
      - reset

  - name: SONiC Basic Provisioning
    vars:
      ansible_connection: ssh
    include_role: 
      name: sonic-baseline
    tags:
      - baseline

  - name: Breakout ports which takes time
    sonic_config:
        src: sonic_breakout.j2
    tags:
      - cfgpush
      - breakout

  - name: Wait 30 secs for Port Breakout
    pause:
      seconds: 30
    delegate_to: localhost
    tags:
      - cfgpush
      - breakout

  # - name: "CFGGEN: Generating Cleanup configuration"
  #   template:
  #       src: sonic_cleanup_cfg.j2
  #       dest: "{{ build_dir }}/sonic_cleanup_{{hostname}}.conf.part"
  #   tags:
  #     - underlay
  #     - cfggen
  #     - cleanup

  # - name: "CFGPUSH: Cleanup Configuration"
  #   sonic_config:
  #     src: sonic_cleanup_cfg.j2
  #     save: "no"
  #     replace: "block"
  #   ignore_errors: yes
  #   tags:
  #     - underlay
  #     - cfgpush
  #     - cleanup

  - name: "CFGGEN: Generating Underlay configuration"
    template:
        src: sonic_evpn_underlay.j2
        dest: "{{ build_dir }}/sonic_underlay_{{hostname}}.conf.part"
    tags:
      - underlay
      - cfggen

  - name: "CFGPUSH: Provisioning Underlay configuration"
    vars:
      command_timeout: 120
    sonic_config:
      src: sonic_evpn_underlay.j2
      # save: "yes"
      # replace: "block"
    tags:
      - underlay
      - cfgpush

  - name: "CFGGEN: Generating EVPN VXLAN configuration"
    template:
        src: sonic_evpn.j2
        dest: "{{ build_dir }}/sonic_evpn_{{hostname}}.conf.part"
    when: (ansible_network_os is defined and ansible_network_os == "dellemc.enterprise_sonic.sonic") and ((dellos_cfg_generate | default('False')) | bool)
    tags:
      - cfggen
      - evpn

  - name: "CFGPUSH: Cleanup EVPN Configuration"
    sonic_config:
      src: sonic_no_evpn.j2
      save: "no"
      # replace: "block"
    ignore_errors: yes
    tags:
      - evpn
      - cfgpush
      - cleanup
      
  - name: "CFGPUSH: Provisioning EVPN VXLAN configuration"
    vars:
      command_timeout: 120
    sonic_config:
        src: sonic_evpn.j2
        # save: "yes"
        # replace: "block"
    when: (ansible_network_os is defined and ansible_network_os == "dellemc.enterprise_sonic.sonic")
    register: output
    tags:
        - cfgpush
        - evpn

  - name: "CFGPUSH: Enable SONiC SNMP/Syslog"
    sonic_config:
      lines:
        - snmp-server location "Santa Clara Poc Lab"
        - snmp-server contact "Dell POC Lab @ Santa Clara"
        - snmp-server group labgroupv3 v3 noauth read read_view
        - snmp-server user labadmin group labgroupv3 auth sha auth-password {{ vault_snmp_labadmin_auth }}
        - snmp-server view read_view 1.3.6.1.2 included
        - logging server 172.17.60.249 remote-port 514 source-interface Management 0
      replace: block
    register: output
    tags:
      - monitor
  #  - debug: var=output
  #  - local_action: copy content={{ output }} dest=LOGS/{{ inventory_hostname }}.yaml

  - name: "Reload SONiC to Start Refresh"
    dellemc.enterprise_sonic.sonic_command:
      commands:
      - command: 'reload'
        prompt: 'continue'
        answer: 'yes'
    tags: reload

  - name: "Wait for Switch ready"
    wait_for_connection:
      connect_timeout: 10
      sleep: 5
      delay: 10
      timeout: 360
    tags: reload
